{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Auth API",
      "description": "회원 인증 관련 API"
    },
    {
      "name": "User API",
      "description": "유저(회원) 관련 API"
    },
    {
      "name": "Comment API",
      "description": "댓글 관련 API"
    },
    {
      "name": "Schedule API",
      "description": "일정 관련 API"
    }
  ],
  "paths": {
    "/schedules": {
      "get": {
        "tags": [
          "Schedule API"
        ],
        "summary": "모든 할일 조회",
        "description": "현재 등록되어 있는 모든 할일 목록을 조회합니다. 페이지네이션 형식입니다.",
        "operationId": "findAll",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "modifiedAt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePageResponseDtoScheduleResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule API"
        ],
        "summary": "할일 등록",
        "description": "현재 로그인되어 있는 유저의 ID로 할일을 새로 생성합니다.",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduleRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "Comment API"
        ],
        "summary": "모든 댓글 조회",
        "description": "현재 등록되어 있는 모든 댓글을 조회합니다.",
        "operationId": "findAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comment API"
        ],
        "summary": "댓글 등록",
        "description": "현재 로그인되어 있는 유저의 ID로 할일에 댓글을 등록합니다.",
        "operationId": "save_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "회원 가입",
        "description": "새로운 유저를 등록합니다.",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "로그아웃",
        "description": "유저 로그 아웃",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "로그인",
        "description": "유저가 로그인 하여 API 사용 권한을 얻습니다.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "특정 유저 조회",
        "description": "회원 등록되어 있는 특정 유저를 조회합니다.",
        "operationId": "findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User API"
        ],
        "summary": "회원 삭제(회원 탈퇴)",
        "description": "특정 회원의 정보를 삭제합니다.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "User API"
        ],
        "summary": "비밀번호 변경",
        "description": "특정 회원의 비밀번호를 변경합니다.",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "tags": [
          "Schedule API"
        ],
        "summary": "특정 할일 조회",
        "description": "현재 등록되어 있는 할일중에 특정 할일을 조회합니다.",
        "operationId": "findById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule API"
        ],
        "summary": "특정 할일 삭제",
        "description": "등록되어 있는 특정 할일을 삭제합니다.",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Schedule API"
        ],
        "summary": "특정 할일 제목, 내용 수정",
        "description": "등록되어 있는 특정 할일의 제목과 내용을 수정합니다.",
        "operationId": "updateTitleAndContents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScheduleTitleAndContentsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "Comment API"
        ],
        "summary": "특정 댓글 조회",
        "description": "현재 등록되어 있는 댓글중에 특정 댓글을 조회합니다.",
        "operationId": "findById_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comment API"
        ],
        "summary": "특정 댓글 삭제",
        "description": "특정 댓글을 삭제합니다.",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "Comment API"
        ],
        "summary": "특정 댓글 내용 수정",
        "description": "특정 댓글의 내용을 수정합니다.",
        "operationId": "updateContents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentContentsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "모든 유저 조회",
        "description": "회원 등록되어 있는 모든 유저를 조회합니다.",
        "operationId": "findAll_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateScheduleRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "할일의 제목 (필수, 최대 50자)",
            "example": "제목",
            "maxLength": 50,
            "minLength": 0
          },
          "contents": {
            "type": "string",
            "description": "할일의 내용 (필수, 최대 200자)",
            "example": "내용입니다.",
            "maxLength": 500,
            "minLength": 0
          }
        },
        "required": [
          "contents",
          "title"
        ]
      },
      "CommentResponseInScheduleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "홍길동"
          },
          "contents": {
            "type": "string",
            "example": "댓글 내용 입니다!!"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ScheduleResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "제목"
          },
          "contents": {
            "type": "string",
            "example": "내용입니다!"
          },
          "comments": {
            "type": "array",
            "example": [],
            "items": {
              "$ref": "#/components/schemas/CommentResponseInScheduleDto"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateCommentRequestDto": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "integer",
            "format": "int64",
            "description": "할일 게시물 id (필수)",
            "example": 1
          },
          "contents": {
            "type": "string",
            "description": "댓글 내용 입력 (필수, 최대 100자)",
            "example": "댓글 내용 입니다!!",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "required": [
          "contents",
          "scheduleId"
        ]
      },
      "CommentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "scheduleId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "contents": {
            "type": "string",
            "example": "댓글 내용 입니다!!"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUserRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "유저의 이름 (필수)",
            "example": "홍길동",
            "maxLength": 10,
            "minLength": 0
          },
          "email": {
            "type": "string",
            "description": "유저의 이메일, 로그인때 사용함 (필수)",
            "example": "hong@example.com",
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z.-]+\\.[a-zA-Z]{2,}$"
          },
          "password": {
            "type": "string",
            "description": "유저의 비밀번호 (필수)",
            "example": "비밀번호는 4~12 자리만 가능하며, 최소 하나의 대문자와 하나의 특수문자(!, @, #, $, %, ^, &, *)를 포함해야 합니다.",
            "pattern": "^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{4,12}$"
          }
        },
        "required": [
          "email",
          "password",
          "username"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "홍길동"
          },
          "email": {
            "type": "string",
            "example": "hong@example.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "유저의 이메일, 로그인때 사용함 (필수)",
            "example": "hong@example.com",
            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z.-]+\\.[a-zA-Z]{2,}$"
          },
          "password": {
            "type": "string",
            "description": "유저의 비밀번호 (필수)",
            "example": "비밀번호는 4~12 자리만 가능하며, 최소 하나의 대문자와 하나의 특수문자(!, @, #, $, %, ^, &, *)를 포함해야 합니다.",
            "pattern": "^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{4,12}$"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdateUserPasswordRequestDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "유저의 기존 비밀번호 (필수)",
            "example": "비밀번호는 4~12 자리만 가능하며, 최소 하나의 대문자와 하나의 특수문자(!, @, #, $, %, ^, &, *)를 포함해야 합니다.",
            "pattern": "^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{4,12}$"
          },
          "newPassword": {
            "type": "string",
            "description": "유저의 새로운 비밀번호 (필수)",
            "example": "비밀번호는 4~12 자리만 가능하며, 최소 하나의 대문자와 하나의 특수문자(!, @, #, $, %, ^, &, *)를 포함해야 합니다.",
            "pattern": "^(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{4,12}$"
          }
        },
        "required": [
          "newPassword",
          "oldPassword"
        ]
      },
      "UpdateScheduleTitleAndContentsRequestDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "할일의 제목 (필수, 최대 50자)",
            "example": "수정된 제목",
            "maxLength": 50,
            "minLength": 0
          },
          "contents": {
            "type": "string",
            "description": "할일의 내용 (필수, 최대 200자)",
            "example": "수정된 내용입니다.",
            "maxLength": 500,
            "minLength": 0
          }
        },
        "required": [
          "contents",
          "title"
        ]
      },
      "UpdateCommentContentsRequestDto": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string",
            "description": "댓글 내용 입력 (필수, 최대 100자)",
            "example": "댓글 내용 입니다!!",
            "maxLength": 100,
            "minLength": 0
          }
        },
        "required": [
          "contents"
        ]
      },
      "SchedulePageResponseDtoScheduleResponseDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleResponseDto"
            }
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      }
    }
  }
}